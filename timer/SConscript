Import('env')

headers = []
instances = []
sources = []
aliases = {}

periph = env['PLATFORM_SPEC'].get('periph', {})

if 'stm32_timer' in periph:
    headers.append('stm32_timer.h')
    for name, data in periph['stm32_timer'].items():
        # ~everyone so far has v1 timers, don't require it until we need it
        real_type = data.get('type', 'v1')
        instances.append({
            'type': 'STM32_TIMER_t<STM32_TIMER_reg_%s_t>' % real_type,
            'name': name,
            'args': [data['offset']],
        })

if 'wch_systick' in periph:
    headers.append('wch_systick.h')
    for name, data in periph['wch_systick'].items():
        # There might be others...
        real_type = data.get('type', 'v4')
        instances.append({
            'type': 'WCH_SYSTICK_t<WCH_SYSTICK_reg_%s_t>' % real_type,
            'name': name,
            'args': [data['offset']],
        })

env.Jinja2('timer.h', '../templates/periph_instances.h.j2', headers = headers, instances = instances, aliases = aliases)

Return('sources')
